<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Logic</name>
    </assembly>
    <members>
        <member name="T:Logic.HighscoreLogic">
            <summary>
            This class is represent the logc of the highscore.
            </summary>
        </member>
        <member name="M:Logic.HighscoreLogic.#ctor(Repository.IStorageRepository{Model.Highscore})">
            <summary>
            Initializes a new instance of the <see cref="T:Logic.HighscoreLogic"/> class.
            </summary>
            <param name="highscoreRepo">IStorageRepository Highscore type parameter.</param>
        </member>
        <member name="M:Logic.HighscoreLogic.Save">
            <summary>
            Save method to save a highscore.
            </summary>
        </member>
        <member name="M:Logic.HighscoreLogic.Insert(Model.Highscore)">
            <summary>
            Insert method to add a new highscore.
            </summary>
            <param name="hs">Highscore type parameter what we want to save.</param>
        </member>
        <member name="M:Logic.HighscoreLogic.Delete(Model.Highscore)">
            <summary>
            Delete method to delete a highscore.
            </summary>
            <param name="hs">Highscore type parameter what we want to delete.</param>
        </member>
        <member name="M:Logic.HighscoreLogic.GetOneHighscore(System.String)">
            <summary>
            GetOneHighscore method to find one highscore by id.
            </summary>
            <param name="id">String type parameter what we want to find.</param>
            <returns>Return a highscore.</returns>
        </member>
        <member name="M:Logic.HighscoreLogic.GetAllHighscore">
            <summary>
            GetAllHighscore to list all of the highscores.
            </summary>
            <returns>Returns an IQueryable Highscore type.</returns>
        </member>
        <member name="T:Logic.HighscoreOrderingLogic">
            <summary>
            Orders highscores.
            </summary>
        </member>
        <member name="M:Logic.HighscoreOrderingLogic.#ctor(Repository.IStorageRepository{Model.Highscore})">
            <summary>
            Initializes a new instance of the <see cref="T:Logic.HighscoreOrderingLogic"/> class.
            </summary>
            <param name="hsRepo">The repository.</param>
        </member>
        <member name="M:Logic.HighscoreOrderingLogic.OrderedByDepth">
            <summary>
            Orders the highscores by deepest poitn reached.
            </summary>
            <returns>The ordered list of highscores.</returns>
        </member>
        <member name="M:Logic.HighscoreOrderingLogic.OrderedByMoney">
            <summary>
            Orders the highscores by deepest poitn reached.
            </summary>
            <returns>The ordered list of highscores.</returns>
        </member>
        <member name="T:Logic.IGameLogic`1">
            <summary>
            The interface for the game logic.
            </summary>
            <typeparam name="T"> A type of object the logic deals with. </typeparam>
        </member>
        <member name="E:Logic.IGameLogic`1.ScreenUpdate">
            <summary>
            Refreshes the screen to draw the map around the player.
            </summary>
        </member>
        <member name="E:Logic.IGameLogic`1.ObjectHit">
            <summary>
            Triggers when an object is hit by either a player or a monster.
            </summary>
        </member>
        <member name="E:Logic.IGameLogic`1.HealthUpdate">
            <summary>
            Triggers when any object's health points change.
            </summary>
        </member>
        <member name="E:Logic.IGameLogic`1.ObjectFalling">
            <summary>
            Triggers when there is no ground under a player/monster.
            </summary>
        </member>
    </members>
</doc>
