<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FiveFeetBelowGame</name>
    </assembly>
    <members>
        <member name="T:FiveFeetBelowGame.App">
            <summary>
            Interaction logic for App.xaml.
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:FiveFeetBelowGame.BL.GameLogic">
            <summary>
            GameLogic class for the logic of our game.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.BL.GameLogic.model">
            <summary>
            GameModel type model, an instance of the descendant class.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.#ctor(FiveFeetBelowGame.VM.GameModel,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.BL.GameLogic"/> class.
            </summary>
            <param name="model">GameModel type parameter.</param>
            <param name="fname">String type parameter.</param>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.GetRenderedBlocks">
            <summary>
            Determines the blocks that are rendered.
            </summary>
            <returns>An array with the blocks.</returns>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.Move(System.Double,System.Double)">
            <summary>
            Moves the player charecter.
            </summary>
            <param name="horizontal"> Horizontal speed. </param>
            <param name="vertical"> Vertical speed.</param>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.GetTilePos(System.Windows.Point)">
            <summary>
            Gets the coordinates of where we clicked.
            </summary>
            <param name="mousePos">The point where the mouse is.</param>
            <returns>The point where we clicked as an object. </returns>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.Gravity">
            <summary>
            Gravity to be implemented.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.PlayerGainedMoney(System.Int32)">
            <summary>
            Increases the player's balance.
            </summary>
            <param name="amount">By this amount.</param>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.PlayerLostHealth(System.Int32)">
            <summary>
            Decreases the players health.
            </summary>
            <param name="amount">By this amount.</param>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.IncreasePickaxeLevel">
            <summary>
            Increases the players pickaxe's level by one.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.HealPlayer(System.Int32)">
            <summary>
            Increases the players health.
            </summary>
            <param name="amount">By this amount.</param>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.IsNeighboring(System.Double,System.Double)">
            <summary>
            Determines if a certain block is neighboring the player or not.
            </summary>
            <param name="bx">The block's x coordinate.</param>
            <param name="by">The block's y coordinate. </param>
            <returns>True if its a neighboring block.</returns>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.InitModel(System.String)">
            <summary>
            Initmodel method for initialize our model.
            </summary>
            <param name="fname">String type parameter.</param>
        </member>
        <member name="M:FiveFeetBelowGame.BL.GameLogic.UpdatePlayer(System.Double,System.Double)">
            <summary>
            Updates the player in the blocks array, and the player's point in the model.
            </summary>
            <param name="newX"> New x coordinate of the player. </param>
            <param name="newY"> new y coordinate of the player. </param>
        </member>
        <member name="T:FiveFeetBelowGame.JsonHandler">
            <summary>
            This class is responsible for reading and writing json files.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.JsonHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.JsonHandler"/> class.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.JsonHandler.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.JsonHandler"/> class.
            </summary>
            <param name="saveName">Filename.</param>
        </member>
        <member name="M:FiveFeetBelowGame.JsonHandler.SaveMap(FiveFeetBelowGame.IGameObject[0:,0:],System.String)">
            <summary>
            Saves the game to a json file.
            </summary>
            <param name="map">The map thats being saved.</param>
            <param name="saveName">The filename.</param>
        </member>
        <member name="M:FiveFeetBelowGame.JsonHandler.LoadMap(System.String)">
            <summary>
            Loads the json save file to a playable array.
            </summary>
            <param name="filePath">The path for the game file.</param>
            <returns>A playable IGameObject array, if the file exists. </returns>
        </member>
        <member name="M:FiveFeetBelowGame.JsonHandler.GenerateFirstSection">
            <summary>
            Generates the first section of the map for the json converter.
            </summary>
            <returns>Returns an object array of game items.</returns>
        </member>
        <member name="M:FiveFeetBelowGame.JsonHandler.RowGenerator(FiveFeetBelowGame.IGameObject[0:,0:]@,System.Int32)">
            <summary>
            Generates one row on the map.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.JsonHandler.OreChooser(System.Int32)">
            <summary>
            Decides what ore to insert depending on the depth.
            </summary>
            <param name="a">A random integer.</param>
            <returns>A letter for the ore.</returns>
        </member>
        <member name="M:FiveFeetBelowGame.JsonHandler.AddMonsters(FiveFeetBelowGame.IGameObject[0:,0:]@)">
            <summary>
            Generates the monsters on the map.
            </summary>
            <param name="map">The map.</param>
        </member>
        <member name="T:FiveFeetBelowGame.Game">
            <summary>
            Interaction logic for Game.xaml.
            </summary>
            <summary>
            Game
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.Game.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.Game"/> class.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.Game.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:FiveFeetBelowGame.BlockType">
            <summary>
            The ore types.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.BlockType.Rock">
            <summary>
            Most common thing underground.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.BlockType.Iron">
            <summary>
            First ore.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.BlockType.Gold">
            <summary>
            Second ore.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.BlockType.Diamond">
            <summary>
            Third ore.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.BlockType.Gem">
            <summary>
            Forth ore.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.BlockType.RareGem">
            <summary>
            Final ore.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.BlockType.Wall">
            <summary>
            Undestructible borders of the map.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.BlockType.Air">
            <summary>
            Empty blocks.
            </summary>
        </member>
        <member name="T:FiveFeetBelowGame.IGameObject">
            <summary>
            An interface for the objects in the game.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.IGameObject.Area">
            <summary>
            Gets or sets the area of the element.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.IGameObject.CX">
            <summary>
            Gets or sets the central X coordinate of the element.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.IGameObject.CY">
            <summary>
            Gets or sets the central Y coordinate of the element.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.IGameObject.HealthPoints">
            <summary>
            Gets or sets the HP of the element.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.IGameObject.IsCollision(FiveFeetBelowGame.IGameObject)">
            <summary>
            Decides if the element is colliding with another element or not.
            </summary>
            <param name="other"> The other element this one might collide with. </param>
            <returns> True if they collide. </returns>
        </member>
        <member name="M:FiveFeetBelowGame.IGameObject.DamageTaken(System.Int32,FiveFeetBelowGame.IGameObject)">
            <summary>
            Subtracts damage from the health.
            </summary>
            <param name="dmg"> The damage the entity takes. </param>
            <param name="source">The source of the damage that destroyed the object.</param>
        </member>
        <member name="M:FiveFeetBelowGame.IGameObject.IsDestroyed(FiveFeetBelowGame.IGameObject)">
            <summary>
            Kills the entity if hp is 0.
            </summary>
            <param name="source">The source of the damage that destroyed the object.</param>
        </member>
        <member name="T:FiveFeetBelowGame.OneBlock">
            <summary>
            An ore block element.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.OneBlock.#ctor(System.Double,System.Double,FiveFeetBelowGame.BlockType)">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.OneBlock"/> class.
            </summary>
            <param name="x">X coordinate of the block.</param>
            <param name="y">Y coordinate of the block.</param>
            <param name="type">The type of the block.</param>
        </member>
        <member name="M:FiveFeetBelowGame.OneBlock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.OneBlock"/> class.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.OneBlock.Type">
            <summary>
            Gets or sets the type of the block.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.OneBlock.Hardness">
            <summary>
            Gets or sets the hardness of the block.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.OneBlock.Area">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OneBlock.CX">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OneBlock.CY">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OneBlock.HealthPoints">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OneBlock.Breakable">
            <summary>
            Gets or sets a value indicating whether the block is breakable or not.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.OneBlock.IsSolid">
            <summary>
            Gets or sets a value indicating whether the block is solid or not.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.OneBlock.Value">
            <summary>
            Gets or sets the value the player gets of the specific block.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.OneBlock.DamageTaken(System.Int32,FiveFeetBelowGame.IGameObject)">
            <inheritdoc/>
        </member>
        <member name="M:FiveFeetBelowGame.OneBlock.IsCollision(FiveFeetBelowGame.IGameObject)">
            <inheritdoc/>
        </member>
        <member name="M:FiveFeetBelowGame.OneBlock.IsDestroyed(FiveFeetBelowGame.IGameObject)">
            <inheritdoc/>
        </member>
        <member name="M:FiveFeetBelowGame.OneBlock.PropertySetter">
            <summary>
            Sets the properties of the object based on the type.
            </summary>
        </member>
        <member name="T:FiveFeetBelowGame.OneMonster">
            <summary>
            A monster element.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.OneMonster.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.OneMonster"/> class.
            </summary>
            <param name="cx">X coordinate. </param>
            <param name="cy">Y coordinate. </param>
        </member>
        <member name="M:FiveFeetBelowGame.OneMonster.#ctor(FiveFeetBelowGame.OneMonster)">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.OneMonster"/> class.
            </summary>
            <param name="other">An object from which the properties will be copied.</param>
        </member>
        <member name="M:FiveFeetBelowGame.OneMonster.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.OneMonster"/> class.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.OneMonster.Area">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OneMonster.CX">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OneMonster.CY">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OneMonster.HealthPoints">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OneMonster.Value">
            <summary>
            Gets or sets the value of killing this monster.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.OneMonster.InflictDamage">
            <summary>
            Calculates the damage to be inflicted based on the pickaxe level.
            </summary>
            <returns>Returns the damage to be infliced.</returns>
        </member>
        <member name="M:FiveFeetBelowGame.OneMonster.DamageTaken(System.Int32,FiveFeetBelowGame.IGameObject)">
            <inheritdoc/>
        </member>
        <member name="M:FiveFeetBelowGame.OneMonster.IsCollision(FiveFeetBelowGame.IGameObject)">
            <inheritdoc/>
        </member>
        <member name="M:FiveFeetBelowGame.OneMonster.IsDestroyed(FiveFeetBelowGame.IGameObject)">
            <inheritdoc/>
        </member>
        <member name="T:FiveFeetBelowGame.OnePlayer">
            <summary>
            OnePlayer represent our player class.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.OnePlayer.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.OnePlayer"/> class.
            </summary>
            <param name="cx">X coordinate. </param>
            <param name="cy">Y coordinate. </param>
        </member>
        <member name="M:FiveFeetBelowGame.OnePlayer.#ctor(FiveFeetBelowGame.OnePlayer)">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.OnePlayer"/> class.
            </summary>
            <param name="other">An object from which the properties will be copied.</param>
        </member>
        <member name="M:FiveFeetBelowGame.OnePlayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.OnePlayer"/> class.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.OnePlayer.Area">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OnePlayer.CX">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OnePlayer.CY">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OnePlayer.DX">
            <summary>
            Gets or sets the horizontal speed of the player.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.OnePlayer.DY">
            <summary>
            Gets or sets the vertical speed of the player.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.OnePlayer.HealthPoints">
            <inheritdoc/>
        </member>
        <member name="P:FiveFeetBelowGame.OnePlayer.PickaxeLvl">
            <summary>
            Gets or sets the lvl of the player's pickaxe.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.OnePlayer.DeepestPointReached">
            <summary>
            Gets or sets the lvl of the player's pickaxe.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.OnePlayer.InflictDamage">
            <summary>
            Calculates the damage to be inflicted based on the pickaxe level.
            </summary>
            <returns>Returns the damage to be infliced.</returns>
        </member>
        <member name="M:FiveFeetBelowGame.OnePlayer.DamageTaken(System.Int32,FiveFeetBelowGame.IGameObject)">
            <inheritdoc/>
        </member>
        <member name="M:FiveFeetBelowGame.OnePlayer.IsCollision(FiveFeetBelowGame.IGameObject)">
            <inheritdoc/>
        </member>
        <member name="M:FiveFeetBelowGame.OnePlayer.IsDestroyed(FiveFeetBelowGame.IGameObject)">
            <inheritdoc/>
        </member>
        <member name="T:FiveFeetBelowGame.HighscoresWindow">
            <summary>
            Interaction logic for HighscoresWindow.xaml.
            </summary>
            <summary>
            HighscoresWindow
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.HighscoresWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.HighscoresWindow"/> class.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.HighscoresWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:FiveFeetBelowGame.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml.
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.MainWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.MainWindow"/> class.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:FiveFeetBelowGame.UI.GameControl">
            <summary>
            GameControl class for the game.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.UI.GameControl.logic">
            <summary>
            An instance of the descendant class.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.UI.GameControl.renderer">
            <summary>
            An instance of the descendant class.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.UI.GameControl.model">
            <summary>
            An instance of the descendant class.
            </summary>
        </member>
        <member name="F:FiveFeetBelowGame.UI.GameControl.tickTimer">
            <summary>
            An instance of the descendant class.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.UI.GameControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.UI.GameControl"/> class.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.UI.GameControl.OnRender(System.Windows.Media.DrawingContext)">
            <inheritdoc/>
        </member>
        <member name="M:FiveFeetBelowGame.UI.Renderer.#ctor(FiveFeetBelowGame.VM.GameModel)">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.UI.Renderer"/> class.
            </summary>
            <param name="model">The gamemodel. </param>
        </member>
        <member name="P:FiveFeetBelowGame.UI.Renderer.PlayerBrush">
            <summary>
            Gets the brush for the player.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.UI.Renderer.MonsterBrush">
            <summary>
            Gets the brush for the monsters.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.UI.Renderer.RockBrush">
            <summary>
            Gets the brush for the rocks.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.UI.Renderer.AirBrush">
            <summary>
            Gets the brush for the air blocks.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.UI.Renderer.OreBrush">
            <summary>
            Gets the brush for the ores.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.UI.Renderer.Middlebrush">
            <summary>
            Gets the brush for the middle.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.UI.Renderer.Reset">
            <summary>
            This method help us to start new game or reset our game.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.UI.Renderer.GetBrush(System.String,System.Boolean)">
            <summary>
            This method draws our items.
            </summary>
            <param name="fname">Image name from file.</param>
            <param name="isTiled">True if we have to use tiled brush.</param>
            <returns>Return a Brush.</returns>
        </member>
        <member name="M:FiveFeetBelowGame.UI.Renderer.BuildDrawing">
            <summary>
            This method fill our drawing context.
            </summary>
            <returns>Returns a Drawing.</returns>
        </member>
        <member name="T:FiveFeetBelowGame.VM.GameModel">
            <summary>
            Gamemodel class.
            </summary>
        </member>
        <member name="M:FiveFeetBelowGame.VM.GameModel.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:FiveFeetBelowGame.VM.GameModel"/> class.
            </summary>
            <param name="w">Double type parameter, it is the width of the gamearea.</param>
            <param name="h">Double type parameter, it is the height of the gamearea.</param>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.Blocks">
            <summary>
            Gets or sets Rock prop represent the rocks of the map.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.RenderedBlocks">
            <summary>
            Gets or sets the part of the map thats being rendered.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.PlayerPos">
            <summary>
            Gets or sets Player prop represent our player position.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.Player">
            <summary>
            Gets or sets the player of the game.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.PlayerBalance">
            <summary>
            Gets or sets the player's balance.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.PlayerPickaxe">
            <summary>
            Gets or sets the level of the player's pickaxe.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.PlayerHealth">
            <summary>
            Gets or sets the player's health points.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.PlayerMaxHealth">
            <summary>
            Gets or sets the player's max health.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.PlayerNeighborBlocks">
            <summary>
            Gets or sets the player neighboring blocks.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.GameWidth">
            <summary>
            Gets Gamewidth represent the width of the map.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.GameHeight">
            <summary>
            Gets GameHeight represent the height of the map.
            </summary>
        </member>
        <member name="P:FiveFeetBelowGame.VM.GameModel.TileSize">
            <summary>
            Gets or sets TileSize represent the tile size in pixels.
            </summary>
        </member>
    </members>
</doc>
